package com.xcky.util;

import com.xcky.util.encry.EncryUtil;

/**
 * 加密工具测试类
 *
 * @author lbchen
 */
public class EncryUtilTest {

    public static void main(String[] args) {
        // 控制台打印出密钥对
        EncryUtil.createKeys(2048);

        // 自定义公钥
        String publicKey = "30820122300D06092A864886F70D01010105000382010F003082010A0282010100A16150FB702180AA23FD98461F0E5B0FF6678276E7108C6530D2C30831163A6007F4D464E098251A52910D2528C16D8CC9E7B492C31510B99EC26B413686D5AB4CFE57FD9CB5A048F35266CE5D3C8C06F67BD8E26B04FE6D8176BCCC24242F37862D4E84D0E64E10558D33AC97A0B9612A5C9CBAC0BBA8313B9F536154AC6311C840AE718086189A1754E018D1F73254A0635FDF377E8E7DB6921403ED52A5FD8F44E9BB4EE262BCB45A8F53C104E7B272C0191761C1AFA42BDB38F56E377FBF428ABFD25D4BA2594C6CE182AA5102C345C7C0DDBED40917D213599E08F13D3161E07B6BA7C886F548B1631A33C1DEA0FE1EBA2E92E0CDDA094411A0C66144FD0203010001";
        // 自定义私钥
        String privateKey = "308204BE020100300D06092A864886F70D0101010500048204A8308204A40201000282010100A16150FB702180AA23FD98461F0E5B0FF6678276E7108C6530D2C30831163A6007F4D464E098251A52910D2528C16D8CC9E7B492C31510B99EC26B413686D5AB4CFE57FD9CB5A048F35266CE5D3C8C06F67BD8E26B04FE6D8176BCCC24242F37862D4E84D0E64E10558D33AC97A0B9612A5C9CBAC0BBA8313B9F536154AC6311C840AE718086189A1754E018D1F73254A0635FDF377E8E7DB6921403ED52A5FD8F44E9BB4EE262BCB45A8F53C104E7B272C0191761C1AFA42BDB38F56E377FBF428ABFD25D4BA2594C6CE182AA5102C345C7C0DDBED40917D213599E08F13D3161E07B6BA7C886F548B1631A33C1DEA0FE1EBA2E92E0CDDA094411A0C66144FD02030100010282010048C5092F5830C343F556B503699D9F926319E9CA9406F247EEEC1AE5E6BC8F361E605825E4E0B65A5840F01C81743761F4E97693774458765B10702CC7D9A51FC968276544F4E18203B6748539A5C3BEA006D895C08C4FEE3122C99F83EC8D1E0C7301A5024DD785A60E35EEEDB09BE724A2FE4977FF26A88CAA1B7F181F63CC38DD5A6FF5C93ADA036845CEFC44E53CBF0002019335B5BE168069C16A5D6CF531E0B8B33261E68C8379275CEF6537BF2CF6249FC3BFFFE4B70FFB277AFD5E2FB7977B268C221700ACFD5ACA1E1D863AFBED22A2A176D1ABDF16BCE4B30CDC5EC560E1AA561C3481EB0C6ED692D384EEBC98EA48D96DE833BFCCE0257B6AC04102818100DEB630FD1361B595689FEDF315CF6AF32EE8C4993449D6E68EA98B59000F26450C22C87653630E64B5D9FAB776E018CCB6A4D2013AAC46A453283E259BDEB60691A3B851577384204CA817B7DF51B02E78834FC822EA61FDDDAD24844293823B5C29CE1392DD07F4E89B457F58E7DB00A3F33ABAEB5CE5E0BE662374A826729B02818100B98057EAA72322433521CEE11BC207F49A651D44FF430DE845719C31E3FCBF749B566E2906F510949D91CFE14164A472604E219CCD68D153A420BBF5BEE67FDF08B6E90744240BA0394E5A915588C77D14FE522D8D470B49C4248B59F2D81F357CC6D52A230031D0D69B3A450B8D7022124EA4B88208AC7FAB0D5545CC5034470281810098C845DD2791AD3F3D1211EBE3F771F8382308D3CD1226B1EE069388CFC894C96364ED3E77400A1CBEC03605EC3019F33E0CDDE067FECD4B679CC0DD8E0B7FB60BED53C1C18B86859DF0E6AC863004FC2C4270D5EC55FC396AFC9F837824B77FBF5F12774D1602A2597C4375F468C24DB32B660BDAF0D4E693D77FD5449173A702818100AA377BF5056336E866D3DC0B32366CA866188CB0286F764E81928B9A38334FD78746DB14E89E6D9581B53004E9C599249EFC72D9789F4B1DAE089F9113985D13E2E23C987F4D7821911436051070CF6516A37BF2F2A593552017CC8B404C52EEF8CD57033054D86162DBD3AF51B77A82B93BD2E8BFE187B02ADCB437B5108FB702818038D83CCD452E2FAB046E9653C33DC9AF912C28A54AF1498FB40953007E92A04EAE4CC54C931E3634F946ECC5E265349C343608C65C5FAC39BCAEFD1CF7CEDFBB93DAB4333E54394C6730192ADFEE5AF4555F5209AD9E63D45C5E3A38D3EF052558DFB3E512D2A713B9B916CBDB56F9E6CDBAF550CB071BE8C3424C67FA13616B";
        // 源字符串
        String str = "hello";
        // 加密
        String encodeStr = EncryUtil.encry(str, publicKey);
        System.out.println("加密后的字符串:\n" + encodeStr);
        // 解密
        String decodeStr = EncryUtil.decry(encodeStr, privateKey);
        //预期hello
        System.out.println(decodeStr);
        // 解密后是否和源字符串相等 预期true
        System.out.println(str.equals(decodeStr));

        String firstMd5 = EncryUtil.md5(str);
        String secondMd5 = EncryUtil.md5(str);
        // 预期true
        System.out.println(firstMd5.equals(secondMd5));
    }
}
